// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketSystemTask.Repository;

#nullable disable

namespace TicketSystemTask.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TicketSystemTask.Core.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TicketNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("TicketSystemTask.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ahmed",
                            PhoneNumber = "01157084165"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mohamed",
                            PhoneNumber = "01234580797"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Omar",
                            PhoneNumber = "01047878945"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Hassan",
                            PhoneNumber = "01546864548"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sayed",
                            PhoneNumber = "01254678654"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Mahmoud",
                            PhoneNumber = "01246084846"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Diaa",
                            PhoneNumber = "01157876484"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Nada",
                            PhoneNumber = "01576864656"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Sara",
                            PhoneNumber = "01546765165"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Amin",
                            PhoneNumber = "01154676470"
                        });
                });

            modelBuilder.Entity("TicketSystemTask.Core.Models.Ticket", b =>
                {
                    b.HasOne("TicketSystemTask.Core.Models.User", "User")
                        .WithOne("Ticket")
                        .HasForeignKey("TicketSystemTask.Core.Models.Ticket", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TicketSystemTask.Core.Models.User", b =>
                {
                    b.Navigation("Ticket");
                });
#pragma warning restore 612, 618
        }
    }
}
